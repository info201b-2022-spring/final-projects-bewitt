size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "R") +
blank_theme
plot_usmap(data = region_black_chart_three_by_state, values = "ratio", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "R", label = scales::comma
) + theme(legend.position = "right")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x=long, y=lat, group=group, fill=ratio, color=ratio),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "R") +
blank_theme
plot_usmap(data = region_black_chart_three_by_state, values = "ratio", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "R", label = scales::comma
) + theme(legend.position = "right")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x=long, y=lat, group=group, fill=ratio),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "R") +
blank_theme
ggplot(state_shape) +
geom_polygon(
mapping = aes(x=long, y=lat, group=group, fill=ratio),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "R") +
blank_theme
plot_usmap(data = region_black_chart_three_by_state, values = "ratio", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "R", label = scales::comma
) + theme(legend.position = "right")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x=long, y=lat, group=group, fill=ratio),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "R") +
blank_theme
plot_usmap(data = region_black_chart_three_by_state, values = "ratio", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "R", label = scales::comma
) + theme(legend.position = "right")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x=long, y=lat, group=group, fill=ratio),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "R") +
blank_theme
ggplot(state_shape) +
geom_polygon(
mapping = aes(x=long, y=lat, group=group, fill=ratio),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low="White", high = "Red") +
labs(fill = "") +
blank_theme
# Filter the data
region_black_chart_two <- filter(incarcerations, year >= 1990)
region_black_chart_two<- group_by(region_black_chart_two, year)
region_black_chart_two <- mutate(region_black_chart_two, jail_black_total_pop = sum(black_jail_pop, na.rm = TRUE))
region_black_chart_two <- mutate(region_black_chart_two, jail_white_total_pop = sum(white_jail_pop, na.rm = TRUE))
region_black_chart_two <- mutate(region_black_chart_two, black_total_pop = sum(black_pop_15to64, na.rm = TRUE))
region_black_chart_two <- mutate(region_black_chart_two, white_total_pop = sum(white_pop_15to64, na.rm = TRUE))
region_black_chart_two <- unique(select(region_black_chart_two, year, black_total_pop, white_total_pop, jail_black_total_pop, jail_white_total_pop))
region_black_chart_two <- mutate(region_black_chart_two, Black = jail_black_total_pop / black_total_pop)
region_black_chart_two <- mutate(region_black_chart_two, White = jail_white_total_pop / white_total_pop)
region_black_chart_two <- select(region_black_chart_two, year, Black, White)
region_black_chart_two <- tidyr::pivot_longer(region_black_chart_two, cols=c('Black', 'White'), names_to='Race',
values_to="value")
a <- ggplot(region_black_chart_two, aes(x=year, y=value, fill=Race)) +
geom_bar(position="stack", stat="identity")
a
source("~/.active-rstudio-document")
ls
cd
cd jakeflynn
ls
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
?help
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
View(grouped)
count(grouped$HeartDisease)
source("~/final-projects-bewitt/table.R")
?colSums
colSums(grouped$HeartDisease == "Yes")
colSums(grouped == "Yes")
colSums(grouped == "Yes")[1]
colSums(grouped == "Yes")[1][1]
typeOf(colSums(grouped == "Yes")[1][1])
typeof(colSums(grouped == "Yes")[1])
source("~/final-projects-bewitt/table.R")
source("~/final-projects-bewitt/table.R")
View(avg_values)
View(avg_values)
colSums(grouped == "Yes")
source("~/final-projects-bewitt/table.R")
View(avg_values)
View(avg_values)
length(grouped$HeartDisease)
View(avg_values)
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
# new data set that is grouped by age category and includes proportion of people who have reported heart disease or a stroke
grouped <- group_by(heart_data_set, AgeCategory)
aggregate_table <- mutate(grouped, heart_disease_yes = colSums(grouped == "Yes")[1])
View(aggregate_table)
# new data set that is grouped by age category and includes proportion of people who have reported heart disease or a stroke
grouped <- group_by(heart_data_set, AgeCategory)
aggregate_table <- mutate(grouped, heart_disease_yes = colSums(grouped == "Yes")[1], lap = length(HeartDisease))
View(aggregate_table)
# new data set that is grouped by age category and includes proportion of people who have reported heart disease or a stroke
grouped <- group_by(heart_data_set, AgeCategory)
grouped$HeartDisease<-ifelse(grouped$HeartDisease=="Yes", 1, 0)
grouped$Stroke<-ifelse(grouped$Stroke=="Yes", 1, 0)
aggregate_table <- summarize(grouped, heart_disease_prop = count(HeartDisease == 1) / length(HeartDisease), stroke_prop = count(Stroke == 1) / length(Stroke))
View(grouped)
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
grouped$Stroke<-ifelse(grouped$Stroke=="Yes", 1, 0)
a <- mutate(grouped, tot_heart = sum(HeartDisease), lap = length(HeartDisease))
aggregate_table <- summarize(grouped, heart_disease_prop = sum(HeartDisease) / length(HeartDisease), stroke_prop = sum(Stroke) / length(Stroke))
View(a)
View(aggregate_table)
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
aggregate_table <- summarize(grouped, heart_disease_prop = format(sum(HeartDisease) / length(HeartDisease), digits = 2), stroke_prop = format(sum(Stroke) / length(Stroke), digits = 2))
View(aggregate_table)
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
# Include proportion of people who have reported heart disease or a stroke for their age category
aggregate_table <- summarize(grouped, heart_disease_prop = format(sum(HeartDisease) / length(HeartDisease), digits = 2),
stroke_prop = format(sum(Stroke) / length(Stroke), digits = 2)
smoke_prop = format(sum(Smoking) / length(Smoking), digits = 2),
alcohol_prop = format(sum(AlcoholDrinking) / length(AlcoholDrinking), digits = 2))
# Include proportion of people who have reported heart disease or a stroke for their age category
aggregate_table <- summarize(grouped, heart_disease_prop = format(sum(HeartDisease) / length(HeartDisease), digits = 2),
stroke_prop = format(sum(Stroke) / length(Stroke), digits = 2),
smoke_prop = format(sum(Smoking) / length(Smoking), digits = 2),
alcohol_prop = format(sum(AlcoholDrinking) / length(AlcoholDrinking), digits = 2))
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
View(aggregate_table)
source("~/.active-rstudio-document")
heart_disease_age %>%
arrange("Heart Disease Proportion") %>%    # First sort by Heart Disease Proportion. This sorts the dataframe but NOT the factor levels.
mutate("Age Category"=factor("Age Category", levels="Age Category")) %>%   # This trick update the factor levels
ggplot(aes(x="Age Category", y="Heart Disease Proportion")) +
geom_segment(aes(xend="Age Category", yend=0)) +
geom_point(size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
View(heart_disease_age)
# new data set that is grouped by age category
grouped <- group_by(heart_data_set, AgeCategory)
# Convert HeartDisease to values that can be summed
grouped$HeartDisease<-ifelse(grouped$HeartDisease=="Yes", 1, 0)
# Include proportion of people who have reported heart disease for their age category
heart_disease_age <- summarize(grouped, heart_disease_prop = format(sum(HeartDisease) / length(HeartDisease), digits = 2))
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_segment(aes(xend=AgeCategory, yend=0)) +
geom_point(size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_segment(aes(xend=AgeCategory, yend=0)) +
geom_point(size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
# Include proportion of people who have reported heart disease for their age category
heart_disease_age <- summarize(grouped, heart_disease_prop = format(sum(HeartDisease) / length(HeartDisease), digits = 2))
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_segment(aes(yend=AgeCategory, xend=0)) +
geom_point(size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) # This trick update the factor levels
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_bar(stat = "identity")
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_bar(stat = "identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_bar(stat = "identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease")
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_bar(stat = "identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease")
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_bar(stat = "identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme_bw(axis.text.x = element_text(angle = 90))
heart_disease_age %>%
arrange(heart_disease_prop) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(AgeCategory=factor(AgeCategory, levels=AgeCategory)) %>%   # This trick update the factor levels
ggplot(aes(x=AgeCategory, y=heart_disease_prop)) +
geom_bar(stat = "identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme(axis.text.x = element_text(angle = 90))
source("~/final-projects-bewitt/chart1.R")
source("~/final-projects-bewitt/chart1.R")
source("~/final-projects-bewitt/chart1.R")
source("~/final-projects-bewitt/chart1.R")
# Call bar plot
heart_disease_age_barplot +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Proportion of Americans With Heart Disease by Age Category (2020)")
source("~/final-projects-bewitt/chart1.R")
# Call bar plot
heart_disease_age_barplot +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Proportion of Americans With Heart Disease by Age Category (2020)")
# Call bar plot
heart_disease_age_barplot +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Proportion of Americans With\nHeart Disease by Age Category (2020)")
source("~/final-projects-bewitt/chart1.R")
# Call bar plot
heart_disease_age_barplot +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Proportion of Americans With\nHeart Disease by Age Category (2020)")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
# Filter the data for years after 1990 because little data is available before this year
region_black_chart <- filter(incarcerations, year >= 1990)
region_black_chart <- group_by(region_black_chart, year, region)
# Calculate the total population of Black individuals in jail per year by region
region_black_chart <- mutate(region_black_chart, black_total_pop = sum(black_jail_pop, na.rm = TRUE))
# Select columns of interest and eliminate duplicates
unique_region_black_chart <- unique(select(region_black_chart, year, black_total_pop, region))
# Create stacked chart
stacked_chart <- ggplot(unique_region_black_chart, aes(fill=region, y=black_total_pop, x=year)) +
geom_bar(position="stack", stat="identity")
stacked_chart + ggtitle("Total Jail Population Count for Black Individuals \n in the United States from 1990 to 2018") +
xlab("Year") + ylab("Total Jail Population Count")
# Filter the data for years after 1990 because little data is available before this year
black_chart_two <- filter(incarcerations, year >= 1990)
# Filter the data for years after 1990 because little data is available before this year
black_chart_two <- filter(incarcerations, year >= 1990)
black_chart_two<- group_by(black_chart_two, year)
# Calculate the total population of Black and White individuals in jail and general population of Black and White individuals per year
black_chart_two <- mutate(black_chart_two, jail_black_total_pop = sum(black_jail_pop, na.rm = TRUE))
black_chart_two <- mutate(black_chart_two, jail_white_total_pop = sum(white_jail_pop, na.rm = TRUE))
black_chart_two <- mutate(black_chart_two, black_total_pop = sum(black_pop_15to64, na.rm = TRUE))
black_chart_two <- mutate(black_chart_two, white_total_pop = sum(white_pop_15to64, na.rm = TRUE))
black_chart_two <- unique(select(black_chart_two, year, black_total_pop, white_total_pop, jail_black_total_pop, jail_white_total_pop))
# Calculate ratio of Black individuals in jail to general Black population
black_chart_two <- mutate(black_chart_two, Black = jail_black_total_pop / black_total_pop)
# Calculate ratio of White individuals in jail to general White population
black_chart_two <- mutate(black_chart_two, White = jail_white_total_pop / white_total_pop)
# Select columns of interest
black_chart_two <- select(black_chart_two, year, Black, White)
black_chart_two <- tidyr::pivot_longer(black_chart_two, cols=c('Black', 'White'), names_to='Race',
values_to="value")
# Create line chart
chart_two <- ggplot(black_chart_two, aes(x=year, y=value, color=Race)) +
geom_line()
chart_two
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
View(chart_one)
# Create stacked chart
chart_one <- ggplot(unique_region_black_chart, aes(fill=region, y=black_total_pop, x=year)) +
geom_bar(position="stack", stat="identity")
chart_one + ggtitle("Total Jail Population Count for Black Individuals \n in the United States from 1990 to 2018") +
xlab("Year") + ylab("Total Jail Population Count")
# Create scatter plot
chart_two <- ggplot(black_chart_two, aes(x=year, y=value, color=Race)) +
geom_line(linetype = 3,
lwd = 1.1)
chart_two + ggtitle("Proportion of Race in Jail to General Population \n in the United States from 1990 to 2018") +
xlab("Year") + ylab("Proportion of Race in Jail to General Population")
chart_three + ggtitle("Ratio of Black individuals in Jail to \n Black Population in the United States in 2018")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
chart_three + ggtitle("Ratio of Black individuals in Jail to\nBlack Population in the United States in 2018")
# Create scatter plot
chart_two <- ggplot(black_chart_two, aes(x=year, y=value, color=Race)) +
geom_line(linetype = 3,
lwd = 1.1)
chart_two + ggtitle("Proportion of Race in Jail to General Population\nin the United States from 1990 to 2018") +
xlab("Year") + ylab("Proportion of Race in Jail to General Population")
# Create stacked chart
chart_one <- ggplot(unique_region_black_chart, aes(fill=region, y=black_total_pop, x=year)) +
geom_bar(position="stack", stat="identity")
chart_one + ggtitle("Total Jail Population Count for Black Individuals\nin the United States from 1990 to 2018") +
xlab("Year") + ylab("Total Jail Population Count")
# Filter the data for years after 1990 because little data is available before this year
region_black_chart <- filter(incarcerations, year >= 1990)
region_black_chart <- group_by(region_black_chart, year, region)
# Calculate the total population of Black individuals in jail per year by region
region_black_chart <- mutate(region_black_chart, black_total_pop = sum(black_jail_pop, na.rm = TRUE))
# Select columns of interest and eliminate duplicates
unique_region_black_chart <- unique(select(region_black_chart, year, black_total_pop, region))
# Create stacked chart
chart_one <- ggplot(unique_region_black_chart, aes(fill=region, y=black_total_pop, x=year)) +
geom_bar(position="stack", stat="identity")
chart_one + ggtitle("Total Jail Population Count for Black Individuals\nin the United States from 1990 to 2018") +
xlab("Year") + ylab("Total Jail Population Count") + labs(fill = "Region")
source("~/final-projects-bewitt/chart1.R")
# Call bar plot
heart_disease_age_barplot +
coord_flip() +
xlab("Age Category (years)") +
ylab("Proportion of Age Category With Heart Disease") +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Proportion of Americans With\nHeart Disease by Age Category (2020)")
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
# Source in the other script
source("analysis.R")
# Load the `knitr` library
library(knitr)
chart_one + ggtitle("Total Jail Population Count for Black Individuals\nin the United States from 1990 to 2018") +
xlab("Year") + ylab("Total Jail Population Count") + labs(fill = "Region")
chart_two + ggtitle("Proportion of Race in Jail to General Population\nin the United States from 1990 to 2018") +
xlab("Year") + ylab("Proportion of Race in Jail to General Population")
chart_three + ggtitle("Ratio of Black individuals in Jail to\nBlack Population in the United States in 2018")
source("~/final-projects-bewitt/table.R")
View(aggregate_table)
source("~/.active-rstudio-document")
source("~/final-projects-bewitt/chart3.R")
View[data]
View(data)
?plot
?plot
?plot
source("~/final-projects-bewitt/chart3.R")
source("~/final-projects-bewitt/chart3.R")
warnings()
?plot
source("~/final-projects-bewitt/chart3.R")
source("~/final-projects-bewitt/chart3.R")
colnames(data)
c("a", "b")
typeof(colnames(data))
a = c("a", "b")
typeof(a)
source("~/final-projects-bewitt/chart3.R")
data
typeof(data)
typeof(data$heart_disease_prop)
source("~/final-projects-bewitt/chart3.R")
typeof(data$heart_disease_prop)
source("~/final-projects-bewitt/chart3.R")
source("~/final-projects-bewitt/chart3.R")
?plot
?pairs
source("~/final-projects-bewitt/chart3.R")
source("~/final-projects-bewitt/chart3.R")
source("table.r")
source("table.r")
source("table.r")
source("summary.r")
source("table.r")
aggregate_table
source("chart1.R")
source("jacksontable.r")
pie_chart
source("chart3.R")
scatter_matrix
# Source in the other script
source("analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
source("~/a3-data-visualization-jakeflynn56/analysis.R")
shiny::runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
install.packages("plotly")
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
unique(filter_df$Region.Name)
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Desktop/5:23')
runApp('Downloads/app-2.r')
library(shiny); runApp('Downloads/app-2.r')
11.2 %/% 1
11.5 %/% 1
12 %/% 10
10 %/% 12
?digit
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
#load in data
heart_data <- read.csv(url("https://raw.githubusercontent.com/info201b-2022-spring/final-projects-bewitt/main/data/heart_2020_cleaned.csv"))
?heart_data$Race
#load in data
heart_data <- read.csv(url("https://raw.githubusercontent.com/info201b-2022-spring/final-projects-bewitt/main/data/heart_2020_cleaned.csv"))
heart_data$Race
colnames(heart_data)
ui <- navbarPage(
# put stuff here
title = "Heart Health",
summary_page,
cat_analysis_page
)
library(shiny)
runApp('final-projects-bewitt')
